// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CrossAdsSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import CrossAdsSDK
import FirebaseAnalytics
import FirebaseCore
import FirebaseRemoteConfig
import Foundation
import Kingfisher
import Swift
import UIKit
import _Concurrency
import _StringProcessing
extension UIKit.UICollectionView {
  @_Concurrency.MainActor(unsafe) public func registerCrossAdsCells()
  @_Concurrency.MainActor(unsafe) public func dequeueBannerCell(crossAd: CrossAdsSDK.CrossAdModel, placeholderImage: UIKit.UIImage?, height: CoreFoundation.CGFloat?, indexPath: Foundation.IndexPath) -> CrossAdsSDK.BannerCollectionViewCell
}
public struct Presentation {
  public var adModel: CrossAdsSDK.CrossAdModel?
  public var placeholderImage: UIKit.UIImage?
  public var adHeight: CoreFoundation.CGFloat?
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class CrossAdsBaseTableViewCell : UIKit.UITableViewCell {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func awakeFromNib()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func setSelected(_ selected: Swift.Bool, animated: Swift.Bool)
  @available(iOS 3.0, *)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public struct CrossAdsConfigration {
  public init(analyticsEnabled: Swift.Bool = true, analyticsLogTitle: Swift.String = "CrossPromotion", configName: Swift.String)
}
extension UIKit.UITableView {
  @_Concurrency.MainActor(unsafe) public func registerCrossAdsCells()
  @_Concurrency.MainActor(unsafe) public func dequeueCrossAdsCell(crossAd: CrossAdsSDK.CrossAdModel, placeholderImage: UIKit.UIImage?) -> CrossAdsSDK.CrossAdsBaseTableViewCell
  @_Concurrency.MainActor(unsafe) public func dequeueCell(type: CrossAdsSDK.CrossAdType) -> CrossAdsSDK.CrossAdsBaseTableViewCell?
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class CrossAdsInterstitialViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) public static func showAd(adModel: CrossAdsSDK.CrossAdModel?, placeholderImage: UIKit.UIImage?, inVC: UIKit.UIViewController)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_hasMissingDesignatedInitializers public class CrossAds {
  public static let shared: CrossAdsSDK.CrossAds
  public var items: [CrossAdsSDK.CrossAdModel]
  public var adsBannerType: [CrossAdsSDK.CrossAdModel] {
    get
  }
  public var adsDetailedBannerType: [CrossAdsSDK.CrossAdModel] {
    get
  }
  public var adsInterstitialType: [CrossAdsSDK.CrossAdModel] {
    get
  }
  public var adsMediumType: [CrossAdsSDK.CrossAdModel] {
    get
  }
  public var adsBannerCollectionViewType: [CrossAdsSDK.CrossAdModel] {
    get
  }
  public func dropAdItem(type: CrossAdsSDK.CrossAdType? = nil)
  public func pickAdItem(type: CrossAdsSDK.CrossAdType? = nil) -> CrossAdsSDK.CrossAdModel?
  public func start(config: CrossAdsSDK.CrossAdsConfigration, completion: @escaping (([CrossAdsSDK.CrossAdModel]?, FirebaseRemoteConfig.RemoteConfig?, Swift.Error?) -> ()))
  @objc deinit
}
public protocol Advertizable {
  var isCrossAd: Swift.Bool? { get set }
}
public enum CrossAdType : Swift.String, Swift.Codable {
  case bannerImage
  case detaildBanner
  case medium
  case interstitial
  case bannerImageCollectionView
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct CrossAdModel : Swift.Codable, CrossAdsSDK.Advertizable {
  public var isCrossAd: Swift.Bool?
  public var id: Swift.String
  public var image: Swift.String?
  public var mainImage: Swift.String?
  public var title: Swift.String?
  public var actionButtonTitle: Swift.String?
  public var subTitle: Swift.String?
  public var type: CrossAdsSDK.CrossAdType?
  public var url: Swift.String?
  public var backupUrl: Swift.String?
  public var view_freq: Swift.Int?
  public var click_freq: Swift.Int?
  public var backgroundColor: Swift.String?
  public var allowDismissAfter: Swift.Double?
  public var height: CoreFoundation.CGFloat?
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class BannerCollectionViewCell : UIKit.UICollectionViewCell {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension CrossAdsSDK.CrossAdType : Swift.Equatable {}
extension CrossAdsSDK.CrossAdType : Swift.Hashable {}
extension CrossAdsSDK.CrossAdType : Swift.RawRepresentable {}
